<?xml version="1.0" encoding="UTF-8"?><testsuite errors="0" failures="3" name="com.test.rest.api.SerenityTest" skipped="0" tests="3" time="14.49" timestamp="2019-08-25 08:15:04"><testcase classname="com.test.rest.api.SerenityTest" name="Verify that user can query current weather with post code"><failure message="1 expectation failed.&#10;JSON path data[0].weather.description doesn't match.&#10;Expected: is &quot;Clear sky&quot;&#10;  Actual: Overcast clouds&#10;" type="java.lang.AssertionError">1 expectation failed.
JSON path data[0].weather.description doesn't match.
Expected: is "Clear sky"
  Actual: Overcast clouds
</failure><system-err>1 expectation failed.
JSON path data[0].weather.description doesn't match.
Expected: is "Clear sky"
  Actual: Overcast clouds

io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:277)
io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:260)
io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:274)
steps.GetCurrentWeatherSteps.iShouldFindWeather(GetCurrentWeatherSteps.java:35)
com.test.rest.api.SerenityTest.verifyThatUserCanQueryCurrentWeatherWithPostCode(SerenityTest.java:21)
</system-err></testcase><testcase classname="com.test.rest.api.SerenityTest" name="Verify that user can query current weather with location"><failure message="1 expectation failed.&#10;JSON path data[0].weather.description doesn't match.&#10;Expected: is &quot;Scattered clouds&quot;&#10;  Actual: Few clouds&#10;" type="java.lang.AssertionError">1 expectation failed.
JSON path data[0].weather.description doesn't match.
Expected: is "Scattered clouds"
  Actual: Few clouds
</failure><system-err>1 expectation failed.
JSON path data[0].weather.description doesn't match.
Expected: is "Scattered clouds"
  Actual: Few clouds

io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:277)
io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:260)
io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:274)
steps.GetCurrentWeatherSteps.iShouldFindWeather(GetCurrentWeatherSteps.java:35)
com.test.rest.api.SerenityTest.verifyThatUserCanQueryCurrentWeatherWithLocation(SerenityTest.java:35)
</system-err></testcase><testcase classname="com.test.rest.api.SerenityTest" name="Verify that user can query current weather with post code negative test"><failure message="1 expectation failed.&#10;Expected status code &lt;400&gt; but was &lt;200&gt;.&#10;" type="java.lang.AssertionError">1 expectation failed.
Expected status code &lt;400&gt; but was &lt;200&gt;.
</failure><system-err>1 expectation failed.
Expected status code &lt;400&gt; but was &lt;200&gt;.

io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:656)
io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
steps.GetCurrentWeatherSteps.searchIsExecutedSuccesfully(GetCurrentWeatherSteps.java:30)
com.test.rest.api.SerenityTest.verifyThatUserCanQueryCurrentWeatherWithPostCode_negativeTest(SerenityTest.java:27)
</system-err></testcase></testsuite>